
/* Style sections within the main section */
.chat-container {
  padding-bottom: 25px;

  & .chat-message {
    margin: 15px 0;

    &.chatbot,
    &.user {
      & .message-content {
        max-width: 400px;
        min-width: 100px;
        position: relative;
        transition: width .2s ease-in-out 0s;
        padding: 13px;

        & p {
          font-size: 0.84em;          
        }
      }
    }

    &.chatbot {
      display: flex;
      margin-right: 5px;
      

      & img {
        width: 23px;
        height: 23px;
        margin-right: 8px;
        margin-top: 8px;
      }

      & .logo {
        border-radius: 50%;
        border: 1px solid rgb(113 123 143 / 70%);
      }

      & .loading {
        margin-left: 8px;
        margin-bottom: 0;
      }

      & .message-content {
        background-color: white;
        border-radius: 5px 20px 20px;
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;

        & p {          
          color: #000;
          align-self: self-start;
        }

        & .buttons {
          display: flex;
          align-items: center;
          font-size: 0.7em;
          margin-top: 15px;
          margin-bottom: -5px;
          flex-wrap: wrap;

          & button {
            background-color: transparent;
            border: none;
            color: var(--button-color-unfocus);
            cursor: pointer;
            font-size: 1em;
            margin-left: 5px;
            padding: 5px 10px;
            border-radius: 5px;
            margin: 5px;
            box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;

            & i {
              padding-right: 1px;
            }

            &:hover {
              color: var(--header-bg-color);
            }

            &:disabled {
              color: #999;
              cursor: not-allowed;
            }
          }
        }
      }
    }

    &.user {
      display: flex;
      justify-content: flex-end;

      & img {
        height: 20px;
        padding-right: 5px;
      }

      & .message-content {
        background-color: var(--header-bg-color);
        border-radius: 20px 5px 20px 20px;
        color: #fff;
        box-shadow: rgba(0, 0, 0, 0.12) 0px 2px 10px, rgba(0, 0, 0, 0.24) 0px 2px 4px;
        max-height: 500px;
        overflow-y: auto;
        overflow-x: hidden;

        & p {
        }
      }
    }
  }
}

.chat-input {
  margin: 0 auto;
    max-width: 400px;
    position: relative;
    min-width: 90%;

  & textarea {
    min-height: 30px;
    resize: none;
    background-color: var(--light);                  /* Set the background color using a CSS variable */
    padding: 10px 13px;                                       /* Add padding to the textarea */
    padding-right: 26px;
    border: 1px solid rgb(113 123 143 / 50%);
    border-radius: 5px;                                      
    width: 100%;                                          /* Set the width to 100% */
    font-size: .9em;
    height: 40px; /* Updated initial height to 40px */
    min-height: 40px; /* Adjusted initial height */
    overflow: hidden; /* Prevents text overflow */
    transition: all 0.9s ease-out;

    &::placeholder {
      color: var(--medium-dark);                          /* Set the placeholder text color using a CSS variable */
      font-size: 88%;                                     /* Set the font size for the placeholder text */
      opacity: 0.8;                                       /* Set the opacity for the placeholder text */

      /* Apply different styling for larger mobile devices and above */
      @media (width >= 380px) {
        font-size: 90%;                                  /* Set the font size to 100% for larger devices */
        opacity: 0.8;                                     /* Set the opacity for the placeholder text */
      }
    }

    &:focus {
      outline: none;
      border: none;
      box-shadow: 0 0 3px var(--button-color);
    }
    
    &:disabled {
      background-color: var(--light-grey);
      cursor: not-allowed;
    }
  }

  .charCount {
    position: absolute;
    font-size: .7em;
    color: gray;
    right: 0;

    &.exceeded {
      color: gray;
    }
  }
  
  button {
    position: absolute;
    bottom: 11px;
    right: 5px;
    font-size: .9em;
    color: var(--logo-color);
    border: none;                                   /* Remove the button border */
    cursor: pointer;                                /* Set the cursor to pointer */

    &:hover {
      color: var(--header-bg-color);                /* Change the background color on hover */
    }

    &:disabled {
      color: #999;                                  /* Set the text color for disabled state */
      cursor: not-allowed;
    }
  }
}

img.loading {
  max-width: 40px;                                /* Set the maximum width of the image */
  filter: none;                                   /* Remove any image filters */
  margin: 0 auto;
}

/* Style the setup inner container */
.setup-inner {
  display: flex;                                        /* Display the setup inner container as a flex container */
  justify-content: space-around;                        /* Distribute the items evenly along the horizontal axis */
  padding: 1.5em 0.5em;                                 /* Add padding to the setup inner container */
  min-height: 234px;                                    /* Set the minimum height of the setup inner container */

  & > img {
    width: 40%;                                          /* Set the width of the image */
    filter: drop-shadow(3px 2px 3px var(--medium-dark)); /* Add a drop shadow to the image */
    align-self: center;                                  /* Center align the image vertically */
  }
}

/* Style the setup input container */
.setup-input-container {
  min-height: 50px;                                     /* Set the minimum height of the setup input container */
  padding-bottom: 0px;

  /* Apply different styling for larger mobile devices and above */
  @media (width >= 380px) {
    padding-top: 0;                                     /* Remove top padding for larger devices */
  }
}

/* Style the speech bubble for AI response */
.speech-bubble-ai {
  min-width: 200px;                                     /* Set the minimum width of the speech bubble */
  min-height: 120px;                                    /* Set the minimum height of the speech bubble */
  border-radius: var(--border-rad-lg);                  /* Set the border radius using a CSS variable */
  position: relative;                                   /* Set the position to relative */
  margin: 0;                                            /* Remove margin */
  background-color: var(--white);                       /* Set the background color using a CSS variable */
  display: flex;                                        /* Display the speech bubble as a flex container */
  align-self: flex-start;                               /* Align the speech bubble to the left */
  align-items: center;                                  /* Center align the items vertically within the speech bubble */

  /* Style the text within the speech bubble */
  & > p {
    padding: 15px;                                      /* Add padding to the text */
    color: var(--dark);                                 /* Set the text color using a CSS variable */
    font-size: 85%;                                    /* Set the font size for the text */

    /* Apply different styling for larger mobile devices and above */
    @media (width >= 380px) {
      font-size: 100%;                                  /* Set the font size to 100% for larger devices */
    }
  }
}


